<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>This week in JBoss, 19th April 2018 - it's BPM week!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/nCa9oImPBDY/this-week-in-jboss-19th-april-2018-its-bpm-week" /><category term="BPM" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_weeklyeditorial" scheme="searchisko:content:tags" /><category term="hibernate ogm" scheme="searchisko:content:tags" /><category term="istio" scheme="searchisko:content:tags" /><category term="jBPM" scheme="searchisko:content:tags" /><category term="keycloak" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><author><name>Mark Little</name></author><id>searchisko:content:id:jbossorg_blog-this_week_in_jboss_19th_april_2018_it_s_bpm_week</id><updated>2018-04-19T13:06:15Z</updated><published>2018-04-19T13:06:00Z</published><content type="html">&lt;!-- [DocumentBodyStart:e11ad022-53cd-4d6c-b6c9-3ef17d33d3b1] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;p&gt;There has been a lot of BPM related activity this relatively quiet week.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;jBPM Lead Kris Verlaenen has written an &lt;a class="jive-link-external-small" href="https://planet.jboss.org/post/bpmnext_2018_kicking_off" rel="nofollow"&gt;article&lt;/a&gt; about his attendance of bpmNEXT 2018. In fact it was such a good day 1 that he had to span it across two &lt;a class="jive-link-external-small" href="https://planet.jboss.org/post/bpmnext_2018_part_2" rel="nofollow"&gt;articles&lt;/a&gt;! Kris also followed up with a &lt;a class="jive-link-external-small" href="https://planet.jboss.org/post/bpmnext_2018_day_2" rel="nofollow"&gt;couple&lt;/a&gt; of entries on &lt;a class="jive-link-external-small" href="https://planet.jboss.org/post/bpmnext_2018_day_2_part_2" rel="nofollow"&gt;day 2&lt;/a&gt; activities. Meanwhile Edson Tirelli has written a complimentary piece that &lt;a class="jive-link-external-small" href="https://planet.jboss.org/post/bpmnext_2018_day_1_videos_are_already_online" rel="nofollow"&gt;points out videos&lt;/a&gt; to the various sessions so everyone can enjoy.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Also this week Eric has been talking about how easy it is to install &lt;a class="jive-link-external-small" href="https://planet.jboss.org/post/cloud_happiness_how_to_install_new_openshift_container_platform_3_9_in_just_minutes" rel="nofollow"&gt;OpenShift Container Platform 3.9&lt;/a&gt; as well as part 3 of his series on the &lt;a class="jive-link-external-small" href="https://planet.jboss.org/post/inside_open_innovation_labs_residency_part_3" rel="nofollow"&gt;Open Innovation Labs residencies&lt;/a&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Christian &lt;a class="jive-link-external-small" href="https://planet.jboss.org/post/our_book_has_been_released_introducing_istio_service_mesh_for_microservices" rel="nofollow"&gt;writes about the book&lt;/a&gt; he and Burr Sutter have written about Istio Service Mesh and which has just been released. Congrats guys!&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Finally &lt;a class="jive-link-external-small" href="https://planet.jboss.org/post/hibernate_ogm_5_4_0_alpha1_is_out" rel="nofollow"&gt;Hibernate OGM 5.4.0 Alpha 1&lt;/a&gt; is out and the Keycloak team are conducting a &lt;a class="jive-link-external-small" href="https://planet.jboss.org/post/keycloak_questionnaire" rel="nofollow"&gt;questionnaire&lt;/a&gt; for users so please look at it.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;OK that's it for this week!&lt;/p&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:e11ad022-53cd-4d6c-b6c9-3ef17d33d3b1] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/nCa9oImPBDY" height="1" width="1" alt=""/&gt;</content><summary>There has been a lot of BPM related activity this relatively quiet week. Â  jBPM Lead Kris Verlaenen has written an article about his attendance of bpmNEXT 2018. In fact it was such a good day 1 that he had to span it across two articles! Kris also followed up with a couple of entries on day 2 activities. Meanwhile Edson Tirelli has written a complimentary piece that points out videos to the variou...</summary><dc:creator>Mark Little</dc:creator><dc:date>2018-04-19T13:06:00Z</dc:date><feedburner:origLink>https://developer.jboss.org/blogs/weekly-editorial/2018/04/19/this-week-in-jboss-19th-april-2018-its-bpm-week</feedburner:origLink></entry><entry><title>Keycloak Questionnaire</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/UYTfgP3MGIM/keycloak-questionnaire.html" /><category term="feed_group_name_keycloak" scheme="searchisko:content:tags" /><category term="feed_name_keycloak" scheme="searchisko:content:tags" /><author><name>unknown</name></author><id>searchisko:content:id:jbossorg_blog-keycloak_questionnaire</id><updated>2018-04-19T09:52:43Z</updated><published>2018-04-19T09:52:00Z</published><content type="html">Are you using Keycloak? If so we would greatly appreciate it if you can take some time and answer some questions at &lt;a href="https://goo.gl/forms/TRSmCCU6eX25prhH2"&gt;https://goo.gl/forms/TRSmCCU6eX25prhH2&lt;/a&gt;.&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/UYTfgP3MGIM" height="1" width="1" alt=""/&gt;</content><summary>Are you using Keycloak? If so we would greatly appreciate it if you can take some time and answer some questions at https://goo.gl/forms/TRSmCCU6eX25prhH2.</summary><dc:creator>unknown</dc:creator><dc:date>2018-04-19T09:52:00Z</dc:date><feedburner:origLink>http://blog.keycloak.org/2018/04/keycloak-questionnaire.html</feedburner:origLink></entry><entry><title>Inside Open Innovation Labs Residency (Part 3)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/J9sbNng_jG0/inside-open-innovation-labs-part-3.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="best practices" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="workshops" scheme="searchisko:content:tags" /><category term="xpaas" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-inside_open_innovation_labs_residency_part_3</id><updated>2018-04-19T05:00:08Z</updated><published>2018-04-19T05:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;a href="https://1.bp.blogspot.com/-clnIkXLlDRs/Wp6KluO5eMI/AAAAAAAAr4U/W2P0HtuXqPUKkAPPNkOucui82NP4n4hLgCLcBGAs/s1600/labs-sign.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img alt="inside open innovation labs" border="0" data-original-height="658" data-original-width="1090" height="192" src="https://1.bp.blogspot.com/-clnIkXLlDRs/Wp6KluO5eMI/AAAAAAAAr4U/W2P0HtuXqPUKkAPPNkOucui82NP4n4hLgCLcBGAs/s320/labs-sign.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;This article is the final in a series taking the reader on a journey. We're taking a peek inside life in a Red Hat Open Innovation Labs residency.&lt;br /&gt;&lt;br /&gt;This is the top tier experience for any customer&lt;b&gt;*&lt;/b&gt;, exposing them to open collaboration, open technologies, and fast agile application delivery methods.&lt;br /&gt;&lt;br /&gt;This experience often escapes organizations attempting digital transformation, so through submersion in an Open Innovation Labs residency Red Hat shares its experience in managing, developing, and delivering solutions with communities, open technologies and open collaboration. &lt;br /&gt;&lt;br /&gt;Join me as I share experiences from inside a real life residency, watching Red Hat work intimately with a customer, exposing new ways of working, leveraging open technologies using fast, agile application delivery methods and open collaboration.&lt;br /&gt;&lt;br /&gt;In &lt;a href="http://www.schabell.org/2018/01/inside-my-open-innovation-labs-residency-part-1.html" target="_blank"&gt;the first part&lt;/a&gt;, I shared what's in a Red Hat Open Innovation Labs Residency. Then &lt;a href="http://www.schabell.org/2018/03/inside-open-innovation-labs-residency-part-2.html" target="_blank"&gt;in part two&lt;/a&gt;, I looked at what I encountered as the residency progressed towards delivery. All that's left is to share the delivery week, known as Demo Day.&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;h2 style="text-align: left;"&gt;Delivering on the Promises&lt;/h2&gt;&lt;div style="text-align: right;"&gt;&lt;/div&gt;If you read part two already, then you know that the residency was divided into four weeks, with each of the weeks being segmented into sprints.&lt;br /&gt;&lt;br /&gt;&lt;table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: right; text-align: right;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-yliEnWkO15w/Ws4JBiGTYKI/AAAAAAAAsQw/lz1rYFXbXYgDU7nNz1WFleuTgMvLsMkfQCLcBGAs/s1600/fullsizeoutput_4f.jpeg" imageanchor="1" style="clear: right; margin-bottom: 1em; margin-left: auto; margin-right: auto;"&gt;&lt;img alt="inside open innovation labs" border="0" data-original-height="1600" data-original-width="1200" height="320" src="https://4.bp.blogspot.com/-yliEnWkO15w/Ws4JBiGTYKI/AAAAAAAAsQw/lz1rYFXbXYgDU7nNz1WFleuTgMvLsMkfQCLcBGAs/s320/fullsizeoutput_4f.jpeg" title="" width="239" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Trying to get the builds green for demo day!&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;These sprints were setup to support a promise made by the team, a promise that we delivered on each week with an internal team demonstration of the progress made on the product being developed.&lt;br /&gt;&lt;br /&gt;The entire residency was also setup with an outcome defined by the team, which also has to be delivered on at the end of the fourth and final sprint week.&lt;br /&gt;&lt;br /&gt;This last sprint works towards delivering a final demonstration which is normally targeting not only the team itself, but also external business stakeholders.&lt;br /&gt;&lt;br /&gt;We have three target outcomes for Demo Day:&lt;br /&gt;&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;Demonstrate we delivered the target business outcomes&lt;/li&gt;&lt;li&gt;Show HOW we did it as a team using Agile, DevOps, TDD and automation and CI/CD.&lt;/li&gt;&lt;li&gt;We want the stakeholders to keep the product team together and to get other teams working in the same way.&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;In this case, the business stakeholders were spread across several global locations and timezones. This meant we held two separate demo presentations.&lt;br /&gt;&lt;br /&gt;The first was held on Thursday in a conference room including a rather nice video conferencing system with large screens holding each of the stakeholders on the other side of the globe.&lt;br /&gt;&lt;br /&gt;Customer team members walk through the process, the sprints, and showcase some of the achievements in the product showcase.&lt;br /&gt;&lt;br /&gt;&lt;table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: right; margin-left: 1em; text-align: right;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/-Lf0eElGdW4U/Ws4MbXQp08I/AAAAAAAAsQ8/QUskUQAAK78wvb0TJJDF5wwY-v3LUQOZQCLcBGAs/s1600/fullsizeoutput_522.jpeg" imageanchor="1" style="clear: right; margin-bottom: 1em; margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="1600" data-original-width="1200" height="320" src="https://3.bp.blogspot.com/-Lf0eElGdW4U/Ws4MbXQp08I/AAAAAAAAsQ8/QUskUQAAK78wvb0TJJDF5wwY-v3LUQOZQCLcBGAs/s320/fullsizeoutput_522.jpeg" width="240" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Artist at work capturing the residency&lt;br /&gt;in images on a single poster.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;Stakeholders can ask questions, make suggestions and provide feedback during this demonstration.&lt;br /&gt;&lt;br /&gt;The first demo day went off without a problem and the feedback was very encouraging.&lt;br /&gt;&lt;br /&gt;The process wins over hearts and minds, with stakeholders left feeling like their team had done more in less time than ever before.&lt;br /&gt;&lt;br /&gt;The important part of this message is that the process, tools and methodologies are now in place.&lt;br /&gt;&lt;br /&gt;These things stay with the customer, providing real potential to continue forward with the progress made on culture and change within the stakeholders team.&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;The final demo day included a special guest, Ellie from &lt;a href="http://inkythinking.com/" target="_blank"&gt;Inky Thinking&lt;/a&gt;, in the room to listen and live capture the process, sprints and residency storyline.&lt;br /&gt;&lt;br /&gt;The image at the top of these posts shows the final graphic Ellie produced, but on the right you'll notice a few of the images showing the artist capturing it during the live demo day.&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: right; margin-left: 1em; text-align: right;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://2.bp.blogspot.com/-JS2ecFCBvJ8/Ws4Mhu3LtWI/AAAAAAAAsRE/TJpCpnnCCtgjldqIwemRaEnghzEiP2qwgCLcBGAs/s1600/fullsizeoutput_29.jpeg" imageanchor="1" style="clear: right; margin-bottom: 1em; margin-left: auto; margin-right: auto;"&gt;&lt;img alt="inside open innovation labs" border="0" data-original-height="1600" data-original-width="1200" height="320" src="https://2.bp.blogspot.com/-JS2ecFCBvJ8/Ws4Mhu3LtWI/AAAAAAAAsRE/TJpCpnnCCtgjldqIwemRaEnghzEiP2qwgCLcBGAs/s320/fullsizeoutput_29.jpeg" title="" width="239" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Delivering on their residency promises!&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;The team was very happy to have finished up their residency, to have learned to work in new ways, leveraging new processes, working with new delivery methods, and above all to have a lot of fun delivering a business outcome.&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;Interested in &lt;a href="https://www.redhat.com/en/open-innovation-labs" target="_blank"&gt;more about the Open Innovation Labs&lt;/a&gt;?&lt;br /&gt;&lt;br /&gt;If you missed the first two parts, rewind and&amp;nbsp;&lt;a href="http://www.schabell.org/2018/01/inside-my-open-innovation-labs-residency-part-1.html" target="_blank"&gt;catch up on part one in this series&lt;/a&gt;&amp;nbsp;examining the residency process.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-size: x-small;"&gt;&lt;i&gt;&lt;b&gt;*&lt;/b&gt; Note that when referring to a customer, I am also referring to our partners and the various opportunities that might be looking to become a customer.&lt;/i&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=pBppuOj5S9g:ZHvQ2FL0BgI:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=pBppuOj5S9g:ZHvQ2FL0BgI:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=pBppuOj5S9g:ZHvQ2FL0BgI:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=pBppuOj5S9g:ZHvQ2FL0BgI:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=pBppuOj5S9g:ZHvQ2FL0BgI:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=pBppuOj5S9g:ZHvQ2FL0BgI:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=pBppuOj5S9g:ZHvQ2FL0BgI:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=pBppuOj5S9g:ZHvQ2FL0BgI:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=pBppuOj5S9g:ZHvQ2FL0BgI:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=pBppuOj5S9g:ZHvQ2FL0BgI:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=pBppuOj5S9g:ZHvQ2FL0BgI:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/pBppuOj5S9g" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/J9sbNng_jG0" height="1" width="1" alt=""/&gt;</content><summary>This article is the final in a series taking the reader on a journey. We're taking a peek inside life in a Red Hat Open Innovation Labs residency. This is the top tier experience for any customer*, exposing them to open collaboration, open technologies, and fast agile application delivery methods. This experience often escapes organizations attempting digital transformation, so through submersion ...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2018-04-19T05:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/pBppuOj5S9g/inside-open-innovation-labs-part-3.html</feedburner:origLink></entry><entry><title>bpmNEXT 2018 day 2 (part 2)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/QTcyiiM65RE/bpmnext-2018-day-2-part-2.html" /><category term="bpmNEXT" scheme="searchisko:content:tags" /><category term="Demo" scheme="searchisko:content:tags" /><category term="event" scheme="searchisko:content:tags" /><category term="feed_group_name_jbpm" scheme="searchisko:content:tags" /><category term="feed_name_kverlaen" scheme="searchisko:content:tags" /><category term="Presentation" scheme="searchisko:content:tags" /><category term="video" scheme="searchisko:content:tags" /><author><name>Kris Verlaenen</name></author><id>searchisko:content:id:jbossorg_blog-bpmnext_2018_day_2_part_2</id><updated>2018-04-19T06:38:50Z</updated><published>2018-04-18T23:48:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div style="text-align: justify;"&gt;&lt;b&gt;RPA Enablement: Focus on Long-Term Value and Continuous Process Improvement&lt;/b&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;i&gt;Massimiliano Delsante - Cognitive Technology Ltd.&lt;/i&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;The myInvenio tool can be used to discover processes based on data already collected.&amp;nbsp; It will derive the process (the tasks, actors, sequence, etc.) from the data and cross-check that with the cases that are already recorded (for example see which are deviating, where time is spent, etc.).&lt;/div&gt;&lt;div style="text-align: justify;"&gt;This information can then be used to derive which activities might be the best candidates for automation.&amp;nbsp; By running a simulation, you can decide for example to add two robots for automating one of the steps (at least the simple cases) and keep one employee for more complex and exceptional cases.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;iframe width="320" height="266" class="YOUTUBE-iframe-video" data-thumbnail-src="https://i.ytimg.com/vi/fl5JiOFpjlM/0.jpg" src="https://www.youtube.com/embed/fl5JiOFpjlM?feature=player_embedded" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;b&gt;Integration is Still Cool, and Core in your BPM Strategy&lt;/b&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;i&gt;Ben Alexander - PMG.net&lt;/i&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;PMG provides drag and drop low-code processes, with pre-built connectors.&amp;nbsp; The process included human tasks for approval, but also supported integration with email, phone or text, or slack, etc.&amp;nbsp; It contacts external services (like Azure ML) for risk assessment, and included some RPA integration.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;iframe width="320" height="266" class="YOUTUBE-iframe-video" data-thumbnail-src="https://i.ytimg.com/vi/JgAGoIc1D4s/0.jpg" src="https://www.youtube.com/embed/JgAGoIc1D4s?feature=player_embedded" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;b&gt;Making Process Personal&lt;/b&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;i&gt;Paul Holmes-Higgin and Micha Kiener - Flowable&lt;/i&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;Chat is becoming more and more an important communication channel for customers.&amp;nbsp; Flowable showed an example of how banks are using lots of different channels to communicate with customers, like a chatbot, and using BPMN2 and CMMN during conversations.&amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;A digital assistant is constantly helping the client advisor during his conversation by creating (sub)cases, advising actions, etc.&amp;nbsp; For example, it can help enter a client address change, validate the information, ask validation, send confirmation emails, involve a compliance officer if necessary, etc. Behind the scenes, the digital assistant is backed by a process (with forms etc.).&amp;nbsp; Finally, integrating Machine Learning can be used to replace some of the manual steps.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;iframe width="320" height="266" class="YOUTUBE-iframe-video" data-thumbnail-src="https://i.ytimg.com/vi/YHcaTbsVwT8/0.jpg" src="https://www.youtube.com/embed/YHcaTbsVwT8?feature=player_embedded" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;b&gt;Robotics, Customer Interactions, and BPM&lt;/b&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;i&gt;Francois Bonnet - ITESOFT&lt;/i&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;A demo with an actual (3d printed, open-source) robot !&amp;nbsp; Francois brought a robot with video and voice recognition capabilities.&amp;nbsp; The robot could be used for example in a shop for greeting clients.&amp;nbsp; Voice recognition can be used to start a process (for example when the customer comes in).&amp;nbsp; The robot can respond to several commands, follow, do face recognition, take pictures, etc. all by configuring various processes.&amp;nbsp; The voice and face recognition isn't always working perfectly yet, but interesting to see anyway !&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;iframe width="320" height="266" class="YOUTUBE-iframe-video" data-thumbnail-src="https://i.ytimg.com/vi/1n9uF5hnQRw/0.jpg" src="https://www.youtube.com/embed/1n9uF5hnQRw?feature=player_embedded" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;b&gt;The Future of Voice in Business Process Automation&lt;/b&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;i&gt;Brandon Brown - K2&lt;/i&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;Voice recognition can be used to create a chatbot.&amp;nbsp; The chatbox can for example be used to request PTO, get your tasks (and complete or even delegate them).&amp;nbsp; But chatbots aren't great for everything.&amp;nbsp; Some data is just easier to provide in a structured form.&amp;nbsp; But even forms can be enhanced with for example sentiment analysis (to automatically update the data based on the sentiment detected from the text provided in the form).&amp;nbsp; You can then for example create standard processes for how to respond to certain sentiments.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;iframe width="320" height="266" class="YOUTUBE-iframe-video" data-thumbnail-src="https://i.ytimg.com/vi/MN0fwtPmtQE/0.jpg" src="https://www.youtube.com/embed/MN0fwtPmtQE?feature=player_embedded" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;b&gt;State Machine Applied to Corporate Loans Process&lt;/b&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;i&gt;Fernando Leibowich Beker - BeeckerCo&lt;/i&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;Processes can be unstructured and rely on rules for defining when tasks should be triggered or not.&amp;nbsp; The demo is using IBM BPM state machine in combination with IBM ODM where the rules define what the next state will be based on the current state and the input.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;iframe width="320" height="266" class="YOUTUBE-iframe-video" data-thumbnail-src="https://i.ytimg.com/vi/eW-MMphxmI4/0.jpg" src="https://www.youtube.com/embed/eW-MMphxmI4?feature=player_embedded" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/QTcyiiM65RE" height="1" width="1" alt=""/&gt;</content><summary>RPA Enablement: Focus on Long-Term Value and Continuous Process Improvement Massimiliano Delsante - Cognitive Technology Ltd. The myInvenio tool can be used to discover processes based on data already collected.Â  It will derive the process (the tasks, actors, sequence, etc.) from the data and cross-check that with the cases that are already recorded (for example see which are deviating, where time...</summary><dc:creator>Kris Verlaenen</dc:creator><dc:date>2018-04-18T23:48:00Z</dc:date><feedburner:origLink>http://kverlaen.blogspot.com/2018/04/bpmnext-2018-day-2-part-2.html</feedburner:origLink></entry><entry><title>bpmNEXT 2018 day 2</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/MVLc-rmrmyE/bpmnext-2018-day-2.html" /><category term="bpmNEXT" scheme="searchisko:content:tags" /><category term="event" scheme="searchisko:content:tags" /><category term="feed_group_name_jbpm" scheme="searchisko:content:tags" /><category term="feed_name_kverlaen" scheme="searchisko:content:tags" /><category term="Presentation" scheme="searchisko:content:tags" /><category term="video" scheme="searchisko:content:tags" /><author><name>Kris Verlaenen</name></author><id>searchisko:content:id:jbossorg_blog-bpmnext_2018_day_2</id><updated>2018-04-19T06:39:00Z</updated><published>2018-04-18T18:53:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div style="text-align: justify;"&gt;An awesome surprise this year, the videos from yesterday are already available on youtube!&amp;nbsp; So I've updated my posts from yesterday with the links, amazing job!&lt;br /&gt;&lt;b&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;b&gt;BPM 2018-2022: Outlook for the Next Five Years&lt;/b&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;i&gt;Nathaniel Palmer&lt;/i&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;Nathaniel is starting with an outlook of where we are (maybe?) going in the next few years.&amp;nbsp; The three R's that will define BPM in his point of view are Robots, Rules and Relationships.&amp;nbsp; With everything running in the cloud.&amp;nbsp; And using Blockchain ;)&amp;nbsp; &lt;/div&gt;&lt;div style="text-align: justify;"&gt;Interaction has already significantly changed (with everyone having a smartphone), but he predicts the smartphone (as we know it) will go away in the next five years - with consumer adoption of &lt;i&gt;new&lt;/i&gt; interfaces accelerating even more.&lt;/div&gt;&lt;div style="text-align: justify;"&gt;Robots (including any kind of smart device or service) will represent customers in various interactions.&amp;nbsp; And will do a lot of the work done by employees nowadays.&amp;nbsp; Even autonomously. This all will have an impact to application architectures, almost introducing a 4th tier in typical 3-tier architectures.&lt;/div&gt;&lt;div style="text-align: justify;"&gt;The future-proof BPM platform (aka the Digital Transformation Platform) brings together various capabilities (like Workflow Mgmt, Decision Mgmt, Machine Learning, etc.) - possibly from different vendors - processing events from many different sources (services, IoT devices, robots, etc.).&lt;/div&gt;&lt;div style="text-align: justify;"&gt;And he ended with the advice, that the best way to invent the future, is to help create it !&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;b&gt;A Next-Generation Backendless Workflow Orchestration API for ISVs&lt;/b&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;i&gt;Brian Reale and Taylor Dondich, ProcessMaker&lt;/i&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;ProcessMaker is showcasing their cloud-based process service.&amp;nbsp; It exposes a REST api for interacting with it, and has connectors to various external services.&amp;nbsp; The service does not come with a BPMN2 designer, but they accept BPMN2 and offer a programmatic interface to create processes as well.&amp;nbsp; They also introduced a "simplified" designer that ISVs can use to define processes (that underneath exports to BPMN2 as well), but hides a lot of the more complex constructs available.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;iframe width="320" height="266" class="YOUTUBE-iframe-video" data-thumbnail-src="https://i.ytimg.com/vi/A0-HkcrrGAw/0.jpg" src="https://www.youtube.com/embed/A0-HkcrrGAw?feature=player_embedded" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;b&gt;CapBPMâs IQ â No-code BPM development â Turning Ideas into Value&lt;/b&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;i&gt;Max Young, Capital Labs&lt;/i&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;To avoid being locked into one vendor, IQ is offering a generic web-based user interface for BPM, that can be used on top of various underlying BPM platforms.&amp;nbsp; On the authoring side you can define process and data models and do different kinds of analysis.&amp;nbsp; In the end, it generates open-source application code that work with a specific product (that your developers can use as a starting point).&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;b&gt;Monitoring Transparency for High-Volume, Next-Generation Workflows&lt;/b&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;i&gt;Jakob Freund and Ryan Johnston - Camunda&lt;/i&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;Camunda is showing Zeebe, their next generation process execution platform.&amp;nbsp; The demo starts when an arbitrage opportunity is detected, and then does various risk calculations. Zeebe Simple Monitor is a web-based monitoring tool to look at deployed processes and running instances.&amp;nbsp; With Optimize you can create and look at reports based on the various events that Zeebe is generating, including charts, heat maps, alerts, etc.&lt;/div&gt;&lt;div style="text-align: justify;"&gt;And as a treat, they showed a doom like easter egg inside their Cockpit, where you can walk through your process "dungeon" and shoot tokens with your shotgun :)&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;iframe width="320" height="266" class="YOUTUBE-iframe-video" data-thumbnail-src="https://i.ytimg.com/vi/yi_5gBTcsu8/0.jpg" src="https://www.youtube.com/embed/yi_5gBTcsu8?feature=player_embedded" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/MVLc-rmrmyE" height="1" width="1" alt=""/&gt;</content><summary>An awesome surprise this year, the videos from yesterday are already available on youtube!Â  So I've updated my posts from yesterday with the links, amazing job! BPM 2018-2022: Outlook for the Next Five Years Nathaniel Palmer Nathaniel is starting with an outlook of where we are (maybe?) going in the next few years.Â  The three R's that will define BPM in his point of view are Robots, Rules and Rela...</summary><dc:creator>Kris Verlaenen</dc:creator><dc:date>2018-04-18T18:53:00Z</dc:date><feedburner:origLink>http://kverlaen.blogspot.com/2018/04/bpmnext-2018-day-2.html</feedburner:origLink></entry><entry><title>The DMN Cookbook has been published</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/7QtQQpVQh7E/the-dmn-cookbook-is-published.html" /><category term="#drools #dmn #dmncookbook #brucesilver" scheme="searchisko:content:tags" /><category term="feed_group_name_drools" scheme="searchisko:content:tags" /><category term="feed_name_drools" scheme="searchisko:content:tags" /><author><name>Edson Tirelli</name></author><id>searchisko:content:id:jbossorg_blog-the_dmn_cookbook_has_been_published</id><updated>2018-04-18T18:29:38Z</updated><published>2018-04-18T18:25:00Z</published><content type="html">&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://methodandstyle.com/wp-content/uploads/dmncookbook-1-400x491.jpg" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="491" data-original-width="400" height="320" src="https://methodandstyle.com/wp-content/uploads/dmncookbook-1-400x491.jpg" width="260" /&gt;&lt;/a&gt;&lt;/div&gt;The Decision Model and Notation (DMN) Standard offers something no previous attempt at standardization of decision modelling did: a simple, graphical effective language for the documentation and modelling of business decisions. It defines both the syntax and the semantics of the model, allowing IT and Business teams to "speak the same language". It also ensures interoperability between vendor tools that support the standard, and protect customer's investment and IP.&lt;br /&gt;&lt;br /&gt;It was an honour to work with accomplished author &lt;a href="https://methodandstyle.com/" target="_blank"&gt;Bruce Silver&lt;/a&gt; to write the "&lt;a href="https://methodandstyle.com/dmn-cookbook/" target="_blank"&gt;DMN Cookbook&lt;/a&gt;", a book that explains the features of the standard by examples, showing solutions for real modelling problems. It discusses what DMN offers that is different from traditional rules authoring languages, as well as how to leverage its features to create robust solutions.&lt;br /&gt;&lt;br /&gt;Topics covered include:&lt;br /&gt;&lt;br /&gt;&lt;div class="content-container" style="-webkit-text-stroke-width: 0px; box-sizing: border-box; color: #747474; font-family: &amp;quot;PT Sans&amp;quot;, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-caps: normal; font-variant-ligatures: normal; font-weight: 400; letter-spacing: normal; margin-bottom: 20px; orphans: 2; text-align: start; text-decoration-color: initial; text-decoration-style: initial; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;"&gt;&lt;ul style="box-sizing: border-box;"&gt;&lt;li style="box-sizing: border-box;"&gt;What is DMN?&lt;/li&gt;&lt;li style="box-sizing: border-box;"&gt;How DMN differs from traditional rule languages&lt;/li&gt;&lt;li style="box-sizing: border-box;"&gt;DMN Basics&lt;ul style="box-sizing: border-box;"&gt;&lt;li style="box-sizing: border-box;"&gt;DRG elements and DRDs&lt;/li&gt;&lt;li style="box-sizing: border-box;"&gt;Decision tables and other boxed expressions&lt;/li&gt;&lt;li style="box-sizing: border-box;"&gt;FEEL&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li style="box-sizing: border-box;"&gt;Decision services&lt;/li&gt;&lt;li style="box-sizing: border-box;"&gt;Practical examples&lt;/li&gt;&lt;ul&gt;&lt;li style="box-sizing: border-box;"&gt;Uniform Residential Loan Application: validation, handling null values, handling XML input&lt;/li&gt;&lt;li style="box-sizing: border-box;"&gt;GSE Mortgage Eligibility: variations using a central registry&lt;/li&gt;&lt;li style="box-sizing: border-box;"&gt;Canadian Sales Tax: variations without a central registry (dynamic and static composition)&lt;/li&gt;&lt;li style="box-sizing: border-box;"&gt;Timing the Stock Market: modeling a state chart with DMN&lt;/li&gt;&lt;li style="box-sizing: border-box;"&gt;Land Registry: DMN-enhanced Smart Contract&lt;/li&gt;&lt;li style="box-sizing: border-box;"&gt;Decision Service Deployment: automated and manual&lt;/li&gt;&lt;li style="box-sizing: border-box;"&gt;Decision Service Orchestration: BPMN or Microsoft Flow&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/div&gt;&lt;br /&gt;More information on the &lt;a href="https://methodandstyle.com/dmn-cookbook/" target="_blank"&gt;book website&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;Available on &lt;a href="https://www.amazon.com/dp/0982368186" target="_blank"&gt;Amazon&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=9TpQM1-vyu0:qkxeHPp48AI:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=9TpQM1-vyu0:qkxeHPp48AI:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?i=9TpQM1-vyu0:qkxeHPp48AI:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=9TpQM1-vyu0:qkxeHPp48AI:dnMXMwOfBR0"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=dnMXMwOfBR0" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=9TpQM1-vyu0:qkxeHPp48AI:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?i=9TpQM1-vyu0:qkxeHPp48AI:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=9TpQM1-vyu0:qkxeHPp48AI:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?i=9TpQM1-vyu0:qkxeHPp48AI:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=9TpQM1-vyu0:qkxeHPp48AI:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=9TpQM1-vyu0:qkxeHPp48AI:jWeZv7XsJd0"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=jWeZv7XsJd0" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/DroolsAtom/~4/9TpQM1-vyu0" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/7QtQQpVQh7E" height="1" width="1" alt=""/&gt;</content><summary>The Decision Model and Notation (DMN) Standard offers something no previous attempt at standardization of decision modelling did: a simple, graphical effective language for the documentation and modelling of business decisions. It defines both the syntax and the semantics of the model, allowing IT and Business teams to "speak the same language". It also ensures interoperability between vendor tool...</summary><dc:creator>Edson Tirelli</dc:creator><dc:date>2018-04-18T18:25:00Z</dc:date><feedburner:origLink>http://feeds.athico.com/~r/DroolsAtom/~3/9TpQM1-vyu0/the-dmn-cookbook-is-published.html</feedburner:origLink></entry><entry><title>Next DevNation Live: Enterprise Node.js on OpenShift, April 19th, 12 p.m. EDT</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/KYgKmX2Xkxw/" /><category term="DevNation" /><category term="Events" /><category term="DevNation Live" /><category term="Javascript" /><category term="node" /><category term="Node.js" /><category term="nodejs" /><category term="OpenShift Container Platform" /><category term="Red Hat OpenShift" /><category term="Red Hat OpenShift Application Runtimes" /><category term="RHOAR" /><author><name>Burr</name></author><id>https://developers.redhat.com/blog/?p=484147</id><updated>2018-04-18T15:55:42Z</updated><published>2018-04-18T15:55:42Z</published><content type="html">&lt;p&gt;&lt;span style="font-weight: 400;"&gt;The next online &lt;/span&gt;&lt;a href="https://developers.redhat.com/devnationlive/"&gt;&lt;span style="font-weight: 400;"&gt;DevNation Live Tech Talk&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; is Thursday, April 19th at 12pm EDT. The topic is âEnterprise Node.js on Red Hat OpenShiftâ presented by Lance Ball, and hosted by Burr Sutter. The popularity of JavaScript on the front end and the JSON format for data has led to a âJavaScript Everywhereâ movement with Node.js at the center. Node.js offers developers an event-driven, non-blocking I/O model that is perfect for high concurrency, low-latency applications that run across distributed devices. Its reactive architecture makes it an ideal technology for containerized microservices architectures youâve been hearing so much about.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;What does this mean for your enterprise? Where does it fit, and how can &lt;/span&gt;&lt;a href="https://developers.redhat.com/products/rhoar/overview/"&gt;&lt;span style="font-weight: 400;"&gt;Red Hat OpenShift Application Runtimes&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; help you use this technology?&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Join this session for the answers. Weâll also demonstrate how quickly you can set up non-trivial enterprise-grade Node.js applications on Red Hat OpenShift Container Platform. We&amp;#8217;ll explore how to integrate with other open source technologies, such as &lt;/span&gt;&lt;a href="https://developers.redhat.com/blog/tag/istio/"&gt;&lt;span style="font-weight: 400;"&gt;Istio&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;, and discuss strategies for your Node.js development and deployment pipeline, including canary and blue/green deployment strategies.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://onlinexperiences.com/scripts/Server.nxp?LASCmd=AI:4;F:QS!10100&amp;#38;ShowKey=51003&amp;#38;AffiliateData=blog"&gt;Register now&lt;/a&gt; and join the live presentation at 12 p.m. EDT, Thursday, April 19th.Â &lt;/strong&gt;&lt;/p&gt; &lt;h2&gt;Session Agenda&lt;/h2&gt; &lt;p&gt;&lt;span id="more-484147"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;In this session youâll discover:&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;How to set up an enterprise-grade Node.js application on Red Hat OpenShift Container Platform.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Why Node.js is an ideal technology for containerized microservices architectures.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;How to integrate Node.js with other open source technologies and new strategies for your Node.js development and deployment.&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;About the Speaker&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;&lt;a href="https://twitter.com/lanceball"&gt;Lance Ball&lt;/a&gt;, Principal Software Engineer, Red Hat&lt;br /&gt; &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Lance Ball is the lead engineer for the Node.js activities within Red Hat JBossÂ®Middleware, and is a Node.js core contributor. Lance speaks at conferences around the world and enjoys writing code in many different programming languages.&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;DevNation Live Tech Talks&lt;/h2&gt; &lt;p&gt;See which talks are happening next at &lt;a href="https://developers.redhat.com/devnationlive/"&gt;developers.redhat.com/devnationlive&lt;/a&gt;. You can also find the recorded videos for previous sessions, such as:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Test Smarter and Gain Some Time Back&lt;/li&gt; &lt;li&gt;Camel Riders in the Cloud&lt;/li&gt; &lt;li&gt;Secure Spring Boot Microservices with Keycloak&lt;/li&gt; &lt;li&gt;Kubeboot &amp;#8211; Spring Boot Deployment on Kubernetes has Never Been So Easy&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;Donât forget toÂ &lt;a href="https://onlinexperiences.com/scripts/Server.nxp?LASCmd=AI:4;F:QS!10100&amp;#38;ShowKey=51003&amp;#38;AffiliateData=blog"&gt;register now&lt;/a&gt; and join the live presentation at 12 p.m. EDT, Thursday, April 19th.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F04%2F18%2Fdevnationlive-enterprise-node-js-openshift%2F&amp;#38;linkname=Next%20DevNation%20Live%3A%20Enterprise%20Node.js%20on%20OpenShift%2C%20April%2019th%2C%2012%20p.m.%20EDT" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F04%2F18%2Fdevnationlive-enterprise-node-js-openshift%2F&amp;#38;linkname=Next%20DevNation%20Live%3A%20Enterprise%20Node.js%20on%20OpenShift%2C%20April%2019th%2C%2012%20p.m.%20EDT" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F04%2F18%2Fdevnationlive-enterprise-node-js-openshift%2F&amp;#38;linkname=Next%20DevNation%20Live%3A%20Enterprise%20Node.js%20on%20OpenShift%2C%20April%2019th%2C%2012%20p.m.%20EDT" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F04%2F18%2Fdevnationlive-enterprise-node-js-openshift%2F&amp;#38;linkname=Next%20DevNation%20Live%3A%20Enterprise%20Node.js%20on%20OpenShift%2C%20April%2019th%2C%2012%20p.m.%20EDT" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F04%2F18%2Fdevnationlive-enterprise-node-js-openshift%2F&amp;#38;linkname=Next%20DevNation%20Live%3A%20Enterprise%20Node.js%20on%20OpenShift%2C%20April%2019th%2C%2012%20p.m.%20EDT" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F04%2F18%2Fdevnationlive-enterprise-node-js-openshift%2F&amp;#38;linkname=Next%20DevNation%20Live%3A%20Enterprise%20Node.js%20on%20OpenShift%2C%20April%2019th%2C%2012%20p.m.%20EDT" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F04%2F18%2Fdevnationlive-enterprise-node-js-openshift%2F&amp;#38;linkname=Next%20DevNation%20Live%3A%20Enterprise%20Node.js%20on%20OpenShift%2C%20April%2019th%2C%2012%20p.m.%20EDT" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F04%2F18%2Fdevnationlive-enterprise-node-js-openshift%2F&amp;#38;linkname=Next%20DevNation%20Live%3A%20Enterprise%20Node.js%20on%20OpenShift%2C%20April%2019th%2C%2012%20p.m.%20EDT" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F04%2F18%2Fdevnationlive-enterprise-node-js-openshift%2F&amp;#38;title=Next%20DevNation%20Live%3A%20Enterprise%20Node.js%20on%20OpenShift%2C%20April%2019th%2C%2012%20p.m.%20EDT" data-a2a-url="https://developers.redhat.com/blog/2018/04/18/devnationlive-enterprise-node-js-openshift/" data-a2a-title="Next DevNation Live: Enterprise Node.js on OpenShift, April 19th, 12 p.m. EDT"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/04/18/devnationlive-enterprise-node-js-openshift/"&gt;Next DevNation Live: Enterprise Node.js on OpenShift, April 19th, 12 p.m. EDT&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/KYgKmX2Xkxw" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;The next online DevNation Live Tech Talk is Thursday, April 19th at 12pm EDT. The topic is âEnterprise Node.js on Red Hat OpenShiftâ presented by Lance Ball, and hosted by Burr Sutter. The popularity of JavaScript on the front end and the JSON format for data has led to a âJavaScript Everywhereâ movement with Node.js [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/04/18/devnationlive-enterprise-node-js-openshift/"&gt;Next DevNation Live: Enterprise Node.js on OpenShift, April 19th, 12 p.m. EDT&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/04/18/devnationlive-enterprise-node-js-openshift/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">484147</post-id><dc:creator>Burr</dc:creator><dc:date>2018-04-18T15:55:42Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/04/18/devnationlive-enterprise-node-js-openshift/</feedburner:origLink></entry><entry><title>bpmNext 2018 day 1 videos are already online!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/z4xpelRsy7g/bpmnext-2018-day-1-videos-are-already.html" /><category term="#drools #bpmnext2018 #blockchain" scheme="searchisko:content:tags" /><category term="feed_group_name_drools" scheme="searchisko:content:tags" /><category term="feed_name_drools" scheme="searchisko:content:tags" /><author><name>Edson Tirelli</name></author><id>searchisko:content:id:jbossorg_blog-bpmnext_2018_day_1_videos_are_already_online</id><updated>2018-04-18T17:07:08Z</updated><published>2018-04-18T15:50:00Z</published><content type="html">The organization of &lt;a href="http://bpmnext.com/" target="_blank"&gt;bpmNEXT 2018&lt;/a&gt; is outdoing themselves! The videos from the first day of the conference are already available.&lt;br /&gt;&lt;br /&gt;In particular, the presentations from Denis GagnÃ©, Bruce Silver and Edson Tirelli are directly related to Drools with content related to DMN. I also recommend the presentation from Vanessa Bridge, as it is related to BPM and the research we've been doing on blockchain.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;b style="background-color: white; color: #222222; font-family: arial, sans-serif; font-size: 12.8px;"&gt;Smarter Contracts with DMN: Edson Tirelli, Red Hat&amp;nbsp;&lt;/b&gt;&lt;a data-saferedirecturl="https://www.google.com/url?hl=en&amp;amp;q=https://youtu.be/tdpZgbQbF9Q&amp;amp;source=gmail&amp;amp;ust=1524149143349000&amp;amp;usg=AFQjCNHrw6kWC9xtTRY6TI1NnZbkojTjdg" href="https://youtu.be/tdpZgbQbF9Q" style="background-color: white; color: #1155cc; font-family: arial, sans-serif; font-size: 12.8px;" target="_blank"&gt;https://youtu.be/tdpZgbQbF9Q&lt;/a&gt;&lt;br /&gt;&lt;br style="background-color: white; color: #222222; font-family: arial, sans-serif; font-size: 12.8px;" /&gt;&lt;b style="background-color: white; color: #222222; font-family: arial, sans-serif; font-size: 12.8px;"&gt;Timing the Stock Market with DMN: Bruce Silver,&amp;nbsp;&lt;a data-saferedirecturl="https://www.google.com/url?hl=en&amp;amp;q=http://methodandstyle.com&amp;amp;source=gmail&amp;amp;ust=1524149143349000&amp;amp;usg=AFQjCNGsCuJX7JRVtDIPrApn71NAYKUuLQ" href="http://methodandstyle.com/" style="color: #1155cc;" target="_blank"&gt;methodandstyle.com&lt;/a&gt;&amp;nbsp;&lt;/b&gt;&lt;a data-saferedirecturl="https://www.google.com/url?hl=en&amp;amp;q=https://youtu.be/vHCIC1HGbHQ&amp;amp;source=gmail&amp;amp;ust=1524149143349000&amp;amp;usg=AFQjCNFPSgrH0YY_1GUKU_9ZHfvpKjj_eg" href="https://youtu.be/vHCIC1HGbHQ" style="background-color: white; color: #1155cc; font-family: arial, sans-serif; font-size: 12.8px;" target="_blank"&gt;https://youtu.be/vHCIC1HGbHQ&lt;/a&gt;&lt;br /&gt;&lt;br style="background-color: white; color: #222222; font-family: arial, sans-serif; font-size: 12.8px;" /&gt;&lt;b style="background-color: white; color: #222222; font-family: arial, sans-serif; font-size: 12.8px;"&gt;Decision as a Service (DaaS): The DMN Platform Revolution: Denis GagnÃ©, Trisotech&amp;nbsp;&lt;/b&gt;&lt;a data-saferedirecturl="https://www.google.com/url?hl=en&amp;amp;q=https://youtu.be/sYAIcBhVhIc&amp;amp;source=gmail&amp;amp;ust=1524149143350000&amp;amp;usg=AFQjCNEYn4bfBWzvB16Poid-YIqXEhlTqA" href="https://youtu.be/sYAIcBhVhIc" style="background-color: white; color: #1155cc; font-family: arial, sans-serif; font-size: 12.8px;" target="_blank"&gt;https://youtu.be/sYAIcBhVhIc&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;b style="background-color: white; color: #222222; font-family: arial, sans-serif; font-size: 12.8px;"&gt;Secure, Private, Decentralized Business Processes for Blockchains: Vanessa Bridge, ConsenSys&amp;nbsp;&lt;/b&gt;&lt;br /&gt;&lt;a data-saferedirecturl="https://www.google.com/url?hl=en&amp;amp;q=https://youtu.be/oww8zMzxvZA&amp;amp;source=gmail&amp;amp;ust=1524149143349000&amp;amp;usg=AFQjCNGp4DTjz9zJim3VWMBC6jBADOElsg" href="https://youtu.be/oww8zMzxvZA" style="background-color: white; color: #1155cc; font-family: arial, sans-serif; font-size: 12.8px;" target="_blank"&gt;https://youtu.be/oww8zMzxvZA&lt;/a&gt;&lt;br /&gt;&lt;br style="background-color: white; color: #222222; font-family: arial, sans-serif; font-size: 12.8px;" /&gt;&lt;b style="background-color: white; color: #222222; font-family: arial, sans-serif; font-size: 12.8px;"&gt;The Future of Process in Digital Business: Jim Sinur, Aragon Research&amp;nbsp;&lt;/b&gt;&lt;a data-saferedirecturl="https://www.google.com/url?hl=en&amp;amp;q=https://youtu.be/iBJBbXeVYUA&amp;amp;source=gmail&amp;amp;ust=1524149143349000&amp;amp;usg=AFQjCNHYueURWpzaf3iu_bqYeunExR63Pw" href="https://youtu.be/iBJBbXeVYUA" style="background-color: white; color: #1155cc; font-family: arial, sans-serif; font-size: 12.8px;" target="_blank"&gt;https://youtu.be/iBJBbXeVYUA&lt;/a&gt;&lt;br /&gt;&lt;br style="background-color: white; color: #222222; font-family: arial, sans-serif; font-size: 12.8px;" /&gt;&lt;b style="background-color: white; color: #222222; font-family: arial, sans-serif; font-size: 12.8px;"&gt;A New Architecture for Automation: Neil Ward-Dutton, MWD Advisors&amp;nbsp;&lt;/b&gt;&lt;a data-saferedirecturl="https://www.google.com/url?hl=en&amp;amp;q=https://youtu.be/-AeijpL4b98&amp;amp;source=gmail&amp;amp;ust=1524149143349000&amp;amp;usg=AFQjCNFCTUPNqsUwEGzPC5ch8mG-GVCUwQ" href="https://youtu.be/-AeijpL4b98" style="background-color: white; color: #1155cc; font-family: arial, sans-serif; font-size: 12.8px;" target="_blank"&gt;https://youtu.be/-AeijpL4b98&lt;/a&gt;&lt;br /&gt;&lt;br style="background-color: white; color: #222222; font-family: arial, sans-serif; font-size: 12.8px;" /&gt;&lt;b style="background-color: white; color: #222222; font-family: arial, sans-serif; font-size: 12.8px;"&gt;Turn IoT Technology into Operational Capability: Pieter van Schalkwyk, XMPro&amp;nbsp;&lt;/b&gt;&lt;a data-saferedirecturl="https://www.google.com/url?hl=en&amp;amp;q=https://youtu.be/G7C01e8qyac&amp;amp;source=gmail&amp;amp;ust=1524149143349000&amp;amp;usg=AFQjCNHomOSLolue57guxlGp2OUmE_vA2A" href="https://youtu.be/G7C01e8qyac" style="background-color: white; color: #1155cc; font-family: arial, sans-serif; font-size: 12.8px;" target="_blank"&gt;https://youtu.be/G7C01e8qyac&lt;/a&gt;&lt;br /&gt;&lt;br style="background-color: white; color: #222222; font-family: arial, sans-serif; font-size: 12.8px;" /&gt;&lt;b style="background-color: white; color: #222222; font-family: arial, sans-serif; font-size: 12.8px;"&gt;Business Milestones as Configuration: Joby O'Brien and Scott Menter, BPLogix&amp;nbsp;&lt;/b&gt;&lt;a data-saferedirecturl="https://www.google.com/url?hl=en&amp;amp;q=https://youtu.be/D_heO33fyC0&amp;amp;source=gmail&amp;amp;ust=1524149143349000&amp;amp;usg=AFQjCNG-SCjAtu0Uk-lF-GywzgN2h7trBg" href="https://youtu.be/D_heO33fyC0" style="background-color: white; color: #1155cc; font-family: arial, sans-serif; font-size: 12.8px;" target="_blank"&gt;https://youtu.be/D_heO33fyC0&lt;/a&gt;&lt;br /&gt;&lt;br style="background-color: white; color: #222222; font-family: arial, sans-serif; font-size: 12.8px;" /&gt;&lt;b style="background-color: white; color: #222222; font-family: arial, sans-serif; font-size: 12.8px;"&gt;Designing the Data-Driven Company: Elmar Nathe, MID GmbH&amp;nbsp;&lt;/b&gt;&lt;a data-saferedirecturl="https://www.google.com/url?hl=en&amp;amp;q=https://youtu.be/zb__xVsOEA0&amp;amp;source=gmail&amp;amp;ust=1524149143350000&amp;amp;usg=AFQjCNH3wu7eWkQlw8V9fCMML6Unjhh8KQ" href="https://youtu.be/zb__xVsOEA0" style="background-color: white; color: #1155cc; font-family: arial, sans-serif; font-size: 12.8px;" target="_blank"&gt;https://youtu.be/zb__xVsOEA0&lt;/a&gt;&lt;br /&gt;&lt;b style="background-color: white; color: #222222; font-family: arial, sans-serif; font-size: 12.8px;"&gt;&lt;br /&gt;Using Customer Journeys to Connect Theory with Reality: Till Reiter and Enrico Teterra, Signavio&amp;nbsp;&lt;/b&gt;&lt;br /&gt;&lt;a data-saferedirecturl="https://www.google.com/url?hl=en&amp;amp;q=https://youtu.be/ov0SqJCMmoY&amp;amp;source=gmail&amp;amp;ust=1524149143350000&amp;amp;usg=AFQjCNF8IFtLFABi7OVrSu2BLTePYAwQoQ" href="https://youtu.be/ov0SqJCMmoY" style="background-color: white; color: #1155cc; font-family: arial, sans-serif; font-size: 12.8px;" target="_blank"&gt;https://youtu.be/ov0SqJCMmoY&lt;/a&gt;&lt;br /&gt;&lt;br style="background-color: white; color: #222222; font-family: arial, sans-serif; font-size: 12.8px;" /&gt;&lt;b style="background-color: white; color: #222222; font-family: arial, sans-serif; font-size: 12.8px;"&gt;Discovering the Organizational DNA: Jude Chagas Pereira, IYCON; Frank Kowalkowski, KCI&amp;nbsp;&lt;/b&gt;&lt;a data-saferedirecturl="https://www.google.com/url?hl=en&amp;amp;q=https://youtu.be/NsCDgKPsTCs&amp;amp;source=gmail&amp;amp;ust=1524149143350000&amp;amp;usg=AFQjCNEKTZqJThUFSdWwyah-PskzLS22RA" href="https://youtu.be/NsCDgKPsTCs" style="background-color: white; color: #1155cc; font-family: arial, sans-serif; font-size: 12.8px;" target="_blank"&gt;https://youtu.be/NsCDgKPsTCs&lt;/a&gt;&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Enjoy!&lt;/div&gt;&lt;div class="yj6qo" style="background-color: white; color: #222222; font-family: arial, sans-serif; font-size: 12.8px;"&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=G-2xIk62FsY:J_K_X1JGCC4:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=G-2xIk62FsY:J_K_X1JGCC4:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?i=G-2xIk62FsY:J_K_X1JGCC4:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=G-2xIk62FsY:J_K_X1JGCC4:dnMXMwOfBR0"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=dnMXMwOfBR0" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=G-2xIk62FsY:J_K_X1JGCC4:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?i=G-2xIk62FsY:J_K_X1JGCC4:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=G-2xIk62FsY:J_K_X1JGCC4:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?i=G-2xIk62FsY:J_K_X1JGCC4:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=G-2xIk62FsY:J_K_X1JGCC4:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=G-2xIk62FsY:J_K_X1JGCC4:jWeZv7XsJd0"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=jWeZv7XsJd0" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/DroolsAtom/~4/G-2xIk62FsY" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/z4xpelRsy7g" height="1" width="1" alt=""/&gt;</content><summary>The organization of bpmNEXT 2018 is outdoing themselves! The videos from the first day of the conference are already available. In particular, the presentations from Denis GagnÃ©, Bruce Silver and Edson Tirelli are directly related to Drools with content related to DMN. I also recommend the presentation from Vanessa Bridge, as it is related to BPM and the research we've been doing on blockchain. Sm...</summary><dc:creator>Edson Tirelli</dc:creator><dc:date>2018-04-18T15:50:00Z</dc:date><feedburner:origLink>http://feeds.athico.com/~r/DroolsAtom/~3/G-2xIk62FsY/bpmnext-2018-day-1-videos-are-already.html</feedburner:origLink></entry><entry><title>When Vert.x Meets Reactive eXtensions (Part 5 of Introduction to Vert.x)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/HEeRavsAJ3M/" /><category term="Java" /><category term="Microservices" /><category term="Modern App Dev" /><category term="Red Hat OpenShift Application Runtimes" /><category term="Eclipse Vert.x" /><category term="reactive" /><category term="reactive programming" /><category term="rxjava" /><category term="vert.x" /><author><name>Clement Escoffier</name></author><id>https://developers.redhat.com/blog/?p=485817</id><updated>2018-04-18T10:55:50Z</updated><published>2018-04-18T10:55:50Z</published><content type="html">&lt;p&gt;This post is the fifth post of myÂ &lt;a href="https://developers.redhat.com/blog/author/cescoffier/"&gt;I&lt;em&gt;ntroduction to Eclipse Vert.x&lt;/em&gt;&lt;/a&gt; series. In the &lt;a href="https://developers.redhat.com/blog/2018/04/09/accessing-data-reactive-way/"&gt;last post&lt;/a&gt;, we saw how Vert.x can interact with a database. To tame the asynchronous nature of Vert.x, we used &lt;code&gt;Future&lt;/code&gt; objects. In this post, we are going to see another way to manage asynchronous code: reactive programming. We will see how Vert.x combined with Reactive eXtensions gives you superpowers.&lt;/p&gt; &lt;p&gt;Letâs start by refreshing our memory with the previous posts:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/03/13/eclipse-vertx-first-application/"&gt;The first post&lt;/a&gt; described how to build a Vert.x application with Apache Maven and execute unit tests.&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/03/22/eclipse-vert-x-application-configuration"&gt;The second post&lt;/a&gt; described how this application became configurable.&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/03/29/rest-vert-x"&gt;The third post&lt;/a&gt; introduced &lt;code&gt;vertx-web&lt;/code&gt;, and a collection management application was developed. This application exposes a REST API used by an HTML/JavaScript front end.&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/04/09/accessing-data-reactive-way/"&gt;In the fourth post&lt;/a&gt;, we replaced the in-memory back end with a database and introduced &lt;code&gt;Future&lt;/code&gt; to orchestrate our asynchronous operations.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;In this post, we are not going to add a new feature. Instead, we&amp;#8217;ll explore another programming paradigm: reactive programming.&lt;span id="more-485817"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;The code of this post is available on the &lt;a href="https://github.com/redhat-developer/introduction-to-eclipse-vertx"&gt;GitHub repo&lt;/a&gt;, in the &lt;code&gt;post-5&lt;/code&gt; directory.&lt;/p&gt; &lt;h2&gt;Thinking Reactively&lt;/h2&gt; &lt;p&gt;Forget everything you know about code and look around. Modeling this world with code is challenging. As developers, we tend to use counter-intuitive approaches. Since the 1980s, object-oriented computing has been seen as the silver bullet. Every entity from our world is represented by an object containing fields and exposing methods. Most of the time, interacting with these objects is done using a blocking and synchronous protocol. You invoke a method and wait for a response. But&amp;#8230;the world in which we are living is asynchronous. The interactions are done using events, messages, and stimuli. To overcome the limitations of object orientation, many patterns and paradigms emerged. Recently, functional programming is making a comeback, not to replace object orientation, but to complement it. &lt;em&gt;Reactive programming&lt;/em&gt; is a functional event-driven programming approach that is used in combination with the regular object-oriented paradigm.&lt;/p&gt; &lt;p&gt;A few years ago, Microsoft created a reactive programming framework for .NET called &lt;a href="http://reactivex.io/"&gt;Reactive eXtensions&lt;/a&gt; (also called ReactiveX or RX). RX is an API for asynchronous programming with &lt;em&gt;observable streams&lt;/em&gt;. This API has been ported to several languages such as JavaScript, Python, C++, and Java.&lt;/p&gt; &lt;p&gt;Let&amp;#8217;s observe our world for a moment. Observe entities in motion: traffic jams, weather, conversations, and financial markets. Things are moving and evolving concurrently. Multiple &lt;em&gt;things&lt;/em&gt; happen at the same time, sometimes independently, sometimes in an orchestrated manner. Each object is creating a &lt;em&gt;stream&lt;/em&gt; of events. For instance, your mouse cursor position is moving. The sequence of positions is a stream. The number of people in the room may be stable, but someone can come in or go out, generating a new value. So we have another stream of values. There is a fundamental mantra behind reactive programming: &lt;em&gt;events are data and data are events&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;What&amp;#8217;s important to understand about RX and asynchronous programming is the asynchronous nature of streams. You observe a stream, and you are notified when an item is emitted by the stream. You don&amp;#8217;t know when that will happen, but you are observing. This observation is done using a &lt;code&gt;subscribe&lt;/code&gt; operation.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/04/streams-reactive.png"&gt;&lt;img class=" aligncenter size-medium wp-image-485827 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/04/streams-reactive.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/04/streams-reactive-300x160.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/04/streams-reactive-300x160.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/04/streams-reactive.png 716w" sizes="(max-width: 300px) 100vw, 300px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;RxJava is a straightforward implementation of RX for the Java programming language. It is an extremely popular library for reactive programming in Java, with applications in networked data processing and graphical user interfaces with JavaFX and Android. RxJava is the lingua franca for reactive libraries in Java, and it provides the following five types to describe publishers:&lt;/p&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;th&gt;&lt;/th&gt; &lt;th&gt;Number of items in the stream&lt;/th&gt; &lt;th&gt;RxJava 2 types&lt;/th&gt; &lt;th&gt;RX signature&lt;/th&gt; &lt;th&gt;Callback signature&lt;/th&gt; &lt;th&gt;Future signature&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Notification, data flow&lt;/td&gt; &lt;td&gt;0..n&lt;/td&gt; &lt;td&gt;Observable, Flowable&lt;/td&gt; &lt;td&gt;Observable stream()&lt;br /&gt; Flowable stream()&lt;/td&gt; &lt;td&gt;ReadStream method()&lt;/td&gt; &lt;td&gt;N/A&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Asynchronous operation producing a result&lt;/td&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;Single&lt;/td&gt; &lt;td&gt;Single get()&lt;/td&gt; &lt;td&gt;void get(Handler&amp;#60;AsyncResult&amp;#62; handler)&lt;/td&gt; &lt;td&gt;Future get()&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Asynchronous operation producing no or one result&lt;/td&gt; &lt;td&gt;0..1&lt;/td&gt; &lt;td&gt;Maybe&lt;/td&gt; &lt;td&gt;Maybe findById(String id)&lt;/td&gt; &lt;td&gt;void get(String id, Handler&amp;#60;AsyncResult&amp;#62; handler)&lt;/td&gt; &lt;td&gt;Future get(String id)&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Asynchronous operation producing no result&lt;/td&gt; &lt;td&gt;0&lt;/td&gt; &lt;td&gt;Completable&lt;/td&gt; &lt;td&gt;Completable flush()&lt;/td&gt; &lt;td&gt;void flush(Handler&amp;#60;AsyncResult&amp;#62; handler)&lt;/td&gt; &lt;td&gt;Future flush()&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;The difference between &lt;code&gt;Observable&lt;/code&gt; and &lt;code&gt;Flowable&lt;/code&gt; is that &lt;code&gt;Flowable&lt;/code&gt; handles back-pressure (implementing the reactive streams protocol) while &lt;code&gt;Observable&lt;/code&gt; does not. &lt;code&gt;Flowable&lt;/code&gt; is better suited for large streams of data coming from a backpressure-supporting source (for example, a TCP connection) while &lt;code&gt;Observable&lt;/code&gt; is better suited for handling âhotâ observables for which backpressure cannot be applied (for example, GUI events).&lt;/p&gt; &lt;p&gt;This post is not an introduction to reactive programming or RX. If you need an introduction-level class about reactive programming and RX, check outÂ &lt;a href="http://escoffier.me/rxjava-hol/"&gt;this tutorial&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;In the previous post, we used &lt;code&gt;Future&lt;/code&gt; to compose asynchronous operations. In this post, we are going to use streams and RxJava. How? Thanks to Vert.x and RxJava 2 APIs. Indeed, Vert.x provides a set of &lt;em&gt;RX-ified&lt;/em&gt; APIs. However, don&amp;#8217;t forget that:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;You can use RxJava without Vert.x&lt;/li&gt; &lt;li&gt;You can use Vert.x without RxJava&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Combining them gives you superpowers because it extends the asynchronous execution model from Vert.x with the power of RxJava streams and operators.&lt;/p&gt; &lt;h2&gt;Enough Talking; Show Me Some Code&lt;/h2&gt; &lt;p&gt;It always starts with a Maven dependency. In your &lt;code&gt;pom.xml&lt;/code&gt; file add this:&lt;/p&gt; &lt;pre class="brush: xml; title: ; notranslate"&gt; &amp;#60;dependency&amp;#62; &amp;#60;groupId&amp;#62;io.vertx&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;vertx-rx-java2&amp;#60;/artifactId&amp;#62; &amp;#60;version&amp;#62;${vertx.version}&amp;#60;/version&amp;#62; &amp;#60;/dependency&amp;#62; &lt;/pre&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;Then, open the &lt;code&gt;io.vertx.intro.first.MyFirstVerticle&lt;/code&gt; class and replace the import statements with this:&lt;/p&gt; &lt;pre class="brush: java; title: ; notranslate"&gt; import io.reactivex.Completable; import io.reactivex.Single; import io.vertx.core.Future; import io.vertx.core.json.JsonArray; import io.vertx.core.json.JsonObject; import io.vertx.ext.sql.SQLOptions; import io.vertx.reactivex.CompletableHelper; import io.vertx.reactivex.config.ConfigRetriever; import io.vertx.reactivex.core.AbstractVerticle; import io.vertx.reactivex.core.buffer.Buffer; import io.vertx.reactivex.core.http.HttpServerResponse; import io.vertx.reactivex.ext.jdbc.JDBCClient; import io.vertx.reactivex.ext.sql.SQLConnection; import io.vertx.reactivex.ext.web.Router; import io.vertx.reactivex.ext.web.RoutingContext; import io.vertx.reactivex.ext.web.handler.BodyHandler; import io.vertx.reactivex.ext.web.handler.StaticHandler; import java.util.List; import java.util.NoSuchElementException; import java.util.stream.Collectors; &lt;/pre&gt; &lt;p&gt;Notice the &lt;code&gt;io.vertx.reactivex&lt;/code&gt; packages. It&amp;#8217;s where the Vert.x RX API is implemented. So, instead of extending &lt;code&gt;io.vertx.core.AbstractVerticle&lt;/code&gt;, we are now extending &lt;code&gt;io.vertx.reactivex.core.AbstractVerticle&lt;/code&gt;. The injected &lt;code&gt;vertx&lt;/code&gt; instance proposes new methods starting with the &lt;code&gt;rx&lt;/code&gt; prefix such asÂ &lt;code&gt;rxDeployVerticle&lt;/code&gt;, or &lt;code&gt;rxClose&lt;/code&gt;. Methods prefixed with &lt;code&gt;rx&lt;/code&gt; are returning RxJava 2 types such as &lt;code&gt;Single&lt;/code&gt; or &lt;code&gt;Completable&lt;/code&gt;.&lt;/p&gt; &lt;h2&gt;From Returning Future to Returning Single and Completable&lt;/h2&gt; &lt;p&gt;To benefit from the RX API and be able to use RX operators, we need to use the RX types. For example, previously we had this:&lt;/p&gt; &lt;pre class="brush: java; title: ; notranslate"&gt; private Future&amp;#38;amp;amp;amp;amp;lt;Void&amp;#38;amp;amp;amp;amp;gt; createHttpServer(JsonObject config, Router router) { Future&amp;#38;amp;amp;amp;amp;lt;Void&amp;#38;amp;amp;amp;amp;gt; future = Future.future(); vertx .createHttpServer() .requestHandler(router::accept) .listen( config.getInteger(&amp;#34;HTTP_PORT&amp;#34;, 8080), res -&amp;#38;amp;amp;amp;amp;gt; future.handle(res.mapEmpty()) ); return future; } &lt;/pre&gt; &lt;p&gt;&lt;code&gt;Future&lt;/code&gt; is mapped to &lt;code&gt;Completable&lt;/code&gt; in RX, &lt;em&gt;that is,&lt;/em&gt; a stream just indicating its completion. So with RX, this code becomes the following:&lt;/p&gt; &lt;pre class="brush: java; title: ; notranslate"&gt; private Completable createHttpServer(JsonObject config, Router router) { return vertx .createHttpServer() .requestHandler(router::accept) .rxListen(config.getInteger(&amp;#34;HTTP_PORT&amp;#34;, 8080)) .toCompletable(); } &lt;/pre&gt; &lt;p&gt;Do you spot the difference? We use the &lt;code&gt;rxListen&lt;/code&gt; method returning a &lt;code&gt;Single&lt;/code&gt;. Because we don&amp;#8217;t need the server, we transform it into a &lt;code&gt;Completable&lt;/code&gt; using the &lt;code&gt;toCompletable&lt;/code&gt; method. The &lt;code&gt;rxListen&lt;/code&gt; is available because we used the &lt;em&gt;rx-ified&lt;/em&gt; &lt;code&gt;vertx&lt;/code&gt; instance.&lt;/p&gt; &lt;p&gt;Let&amp;#8217;s now rewrite the &lt;code&gt;connect&lt;/code&gt; method. &lt;code&gt;connect&lt;/code&gt; was returning a &lt;code&gt;Future&lt;/code&gt;. This is translated into a &lt;code&gt;Single&lt;/code&gt;:&lt;/p&gt; &lt;pre class="brush: java; title: ; notranslate"&gt; private Single&amp;#38;amp;amp;amp;amp;lt;SQLConnection&amp;#38;amp;amp;amp;amp;gt; connect() { return jdbc.rxGetConnection() .map(c -&amp;#38;amp;amp;amp;amp;gt; c.setOptions( new SQLOptions().setAutoGeneratedKeys(true))); } &lt;/pre&gt; &lt;p&gt;The &lt;code&gt;jdbc&lt;/code&gt; client is also providing anÂ &lt;code&gt;rx&lt;/code&gt; API. &lt;code&gt;rxGetConnection&lt;/code&gt; returns a &lt;code&gt;Single&lt;/code&gt;. To enable the key generation, we use the &lt;code&gt;map&lt;/code&gt; method. &lt;code&gt;map&lt;/code&gt; takes the result from the observed &lt;code&gt;Single&lt;/code&gt; and &lt;em&gt;transforms it&lt;/em&gt; using a &lt;em&gt;mapper&lt;/em&gt; function. Here we just adapt the options.&lt;/p&gt; &lt;p&gt;Following the same principles, the &lt;code&gt;insert&lt;/code&gt; method is rewritten as follows:&lt;/p&gt; &lt;pre class="brush: java; title: ; notranslate"&gt; private Single&amp;#38;amp;amp;amp;amp;lt;Article&amp;#38;amp;amp;amp;amp;gt; insert(SQLConnection connection, Article article, boolean closeConnection) { String sql = &amp;#34;INSERT INTO Articles (title, url) VALUES (?, ?)&amp;#34;; return connection .rxUpdateWithParams(sql, new JsonArray().add(article.getTitle()).add(article.getUrl())) .map(res -&amp;#38;amp;amp;amp;amp;gt; new Article(res.getKeys().getLong(0), article.getTitle(), article.getUrl())) .doFinally(() -&amp;#38;amp;amp;amp;amp;gt; { if (closeConnection) { connection.close(); } }); } &lt;/pre&gt; &lt;p&gt;Here, we execute the &lt;code&gt;INSERT&lt;/code&gt; statement using &lt;code&gt;rxUpdateWithParams&lt;/code&gt;. The result is transformed into an &lt;code&gt;Article&lt;/code&gt;. Notice the &lt;code&gt;doFinally&lt;/code&gt;. This method is called when the operation has completed or failed. In both cases, if requested, we close the connection.&lt;/p&gt; &lt;p&gt;The same approach is applied to the &lt;code&gt;query&lt;/code&gt; method that uses the &lt;code&gt;rxQuery&lt;/code&gt; method:&lt;/p&gt; &lt;pre class="brush: java; title: ; notranslate"&gt; private Single&amp;#38;amp;amp;amp;amp;lt;List&amp;#38;amp;amp;amp;amp;lt;Article&amp;#38;amp;amp;amp;amp;gt;&amp;#38;amp;amp;amp;amp;gt; query(SQLConnection connection) { return connection.rxQuery(&amp;#34;SELECT * FROM articles&amp;#34;) .map(rs -&amp;#38;amp;amp;amp;amp;gt; rs.getRows().stream() .map(Article::new) .collect(Collectors.toList()) ) .doFinally(connection::close); } &lt;/pre&gt; &lt;p&gt;&lt;code&gt;queryOne&lt;/code&gt; needs to &lt;em&gt;throw&lt;/em&gt; an error if the searched article is not present:&lt;/p&gt; &lt;pre class="brush: java; title: ; notranslate"&gt; private Single&amp;#38;amp;amp;amp;amp;lt;Article&amp;#38;amp;amp;amp;amp;gt; queryOne(SQLConnection connection, String id) { String sql = &amp;#34;SELECT * FROM articles WHERE id = ?&amp;#34;; return connection.rxQueryWithParams(sql, new JsonArray().add(Integer.valueOf(id)) ) .doFinally(connection::close) .map(rs -&amp;#38;amp;amp;amp;amp;gt; { List&amp;#38;amp;amp;amp;amp;lt;JsonObject&amp;#38;amp;amp;amp;amp;gt; rows = rs.getRows(); if (rows.size() == 0) { throw new NoSuchElementException( &amp;#34;No article with id &amp;#34; + id); } else { JsonObject row = rows.get(0); return new Article(row); } }); } &lt;/pre&gt; &lt;p&gt;The exception thrown by the &lt;em&gt;mapper&lt;/em&gt; function is propagated to the stream. So the observer can react to it and recover.&lt;/p&gt; &lt;h2&gt;Transforming Types&lt;/h2&gt; &lt;p&gt;We have already seen the &lt;code&gt;toCompletable&lt;/code&gt; method above discarding the result from a &lt;code&gt;Single&lt;/code&gt; and just informing the subscriber of the successful completion or failure of the operation. In the &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;delete&lt;/code&gt; methods, we need to do almost the same thing. We execute SQL statements and if we realize that no rows have been changed by these statements we report an error. To implement this, we are using &lt;code&gt;flatMapCompletable&lt;/code&gt;. This method is part of the &lt;code&gt;flatMap&lt;/code&gt; family, a very powerful RX operator. This method takes as parameter a function. This function is called for each item emitted by the observed stream. If the stream is a &lt;code&gt;Single&lt;/code&gt;, it will be called either zero (error case) or one (operation succeeded with a result) times. Unlike the &lt;code&gt;map&lt;/code&gt; operator, &lt;code&gt;flatMap&lt;/code&gt; function returns a stream. For example, in our context, theÂ &lt;code&gt;flatMapCompletable&lt;/code&gt; function is called with an &lt;code&gt;UpdateResult&lt;/code&gt; and returns a &lt;code&gt;Completable&lt;/code&gt;:&lt;/p&gt; &lt;pre class="brush: java; title: ; notranslate"&gt; private Completable update(SQLConnection connection, String id, Article article) { String sql = &amp;#34;UPDATE articles SET title = ?, url = ? WHERE id = ?&amp;#34;; JsonArray params = new JsonArray().add(article.getTitle()) .add(article.getUrl()) .add(Integer.valueOf(id)); return connection.rxUpdateWithParams(sql, params) .flatMapCompletable(ur -&amp;#38;amp;amp;amp;amp;gt; ur.getUpdated() == 0 ? Completable .error(new NoSuchElementException( &amp;#34;No article with id &amp;#34; + id)) : Completable.complete() ) .doFinally(connection::close); } private Completable delete(SQLConnection connection, String id) { String sql = &amp;#34;DELETE FROM Articles WHERE id = ?&amp;#34;; JsonArray params = new JsonArray().add(Integer.valueOf(id)); return connection.rxUpdateWithParams(sql, params) .doFinally(connection::close) .flatMapCompletable(ur -&amp;#38;amp;amp;amp;amp;gt; ur.getUpdated() == 0 ? Completable .error(new NoSuchElementException( &amp;#34;No article with id &amp;#34; + id)) : Completable.complete() ); } &lt;/pre&gt; &lt;p&gt;In both cases, we check the number of updated rows, and, if 0, produce a failing &lt;code&gt;Completable&lt;/code&gt;. So the subscriber receives either a success (&lt;code&gt;Completable.complete&lt;/code&gt;) or the error (&lt;code&gt;Completable.error&lt;/code&gt;). Notice that this code can also use the previous approach: using the &lt;code&gt;map&lt;/code&gt; operator, throwing an exception, and discarding the result using &lt;code&gt;toCompletable&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Obviously, we can also transform a &lt;code&gt;Completable&lt;/code&gt; to a &lt;code&gt;Single&lt;/code&gt;:&lt;/p&gt; &lt;pre class="brush: java; title: ; notranslate"&gt; private Single&amp;#38;amp;amp;amp;amp;lt;SQLConnection&amp;#38;amp;amp;amp;amp;gt; createTableIfNeeded( SQLConnection connection) { return vertx.fileSystem().rxReadFile(&amp;#34;tables.sql&amp;#34;) .map(Buffer::toString) .flatMapCompletable(connection::rxExecute) .toSingleDefault(connection); } &lt;/pre&gt; &lt;p&gt;&lt;code&gt;rxExecute&lt;/code&gt; returns a &lt;code&gt;Completable&lt;/code&gt;. But here we need to forward the &lt;code&gt;SQLConnection&lt;/code&gt;. Fortunately, the &lt;code&gt;toSingleDefault&lt;/code&gt; operator transforms the &lt;code&gt;Completable&lt;/code&gt; to a &lt;code&gt;Single&lt;/code&gt; emitting the given value.&lt;/p&gt; &lt;h2&gt;Composing Asynchronous Actions&lt;/h2&gt; &lt;p&gt;So far, we are using &lt;code&gt;rx&lt;/code&gt; methods and adapting the result. But how can we deal with sequential composition? Execute a first operation and then execute a second one with the result of the first operation? This can be done using the &lt;code&gt;flatMap&lt;/code&gt; operator. As stated above, &lt;code&gt;flatMap&lt;/code&gt; is a very powerful operator. It receives a function as parameter, and unlike the &lt;code&gt;map&lt;/code&gt; operator, this function returns a stream (so &lt;code&gt;Single&lt;/code&gt;, &lt;code&gt;Maybe&lt;/code&gt;, &lt;code&gt;Completable&lt;/code&gt;&amp;#8230;). This function is called for each item from the observed streams, and the returned streams are &lt;em&gt;flattened&lt;/em&gt; so the items are serialized into a single stream. Because streams are async constructs, calling &lt;code&gt;flatMap&lt;/code&gt; creates a sequential composition. Let&amp;#8217;s see the &lt;code&gt;createSomeDataIfNone&lt;/code&gt; method. The initial implementation is the following:&lt;/p&gt; &lt;pre class="brush: java; title: ; notranslate"&gt; private Future&amp;#38;amp;amp;amp;amp;lt;SQLConnection&amp;#38;amp;amp;amp;amp;gt; createSomeDataIfNone( SQLConnection connection) { Future&amp;#38;amp;amp;amp;amp;lt;SQLConnection&amp;#38;amp;amp;amp;amp;gt; future = Future.future(); connection.query(&amp;#34;SELECT * FROM Articles&amp;#34;, select -&amp;#38;amp;amp;amp;amp;gt; { if (select.failed()) { future.fail(select.cause()); } else { if (select.result().getResults().isEmpty()) { Article article1 = new Article(&amp;#34;Fallacies of distributed computing&amp;#34;, &amp;#34;https://en.wikipedia.org/wiki/Fallacies_of_distributed_computing&amp;#34;); Article article2 = new Article(&amp;#34;Reactive Manifesto&amp;#34;, &amp;#34;https://www.reactivemanifesto.org/&amp;#34;); Future&amp;#38;amp;amp;amp;amp;lt;Article&amp;#38;amp;amp;amp;amp;gt; insertion1 = insert(connection, article1, false); Future&amp;#38;amp;amp;amp;amp;lt;Article&amp;#38;amp;amp;amp;amp;gt; insertion2 = insert(connection, article2, false); CompositeFuture.all(insertion1, insertion2) .setHandler(r -&amp;#38;amp;amp;amp;amp;gt; future.handle(r.map(connection))); } else { future.complete(connection); } } }); return future; } &lt;/pre&gt; &lt;p&gt;In this method, we execute a query and depending on the result we insert articles. The RX implementation is the following:&lt;/p&gt; &lt;pre class="brush: java; title: ; notranslate"&gt; private Single&amp;#38;amp;amp;amp;amp;lt;SQLConnection&amp;#38;amp;amp;amp;amp;gt; createSomeDataIfNone( SQLConnection c) { return c.rxQuery(&amp;#34;SELECT * FROM Articles&amp;#34;) .flatMap(rs -&amp;#38;amp;amp;amp;amp;gt; { if (rs.getResults().isEmpty()) { Article article1 = new Article(&amp;#34;Fallacies of distributed computing&amp;#34;, &amp;#34;https://en.wikipedia.org/wiki/Fallacies_of_distributed_computing&amp;#34;); Article article2 = new Article(&amp;#34;Reactive Manifesto&amp;#34;, &amp;#34;https://www.reactivemanifesto.org/&amp;#34;); return Single.zip( insert(connection, article1, false), insert(connection, article2, false), (a1, a2) -&amp;#38;amp;amp;amp;amp;gt; c ); } else { return Single.just(c); } }); } &lt;/pre&gt; &lt;p&gt;First, we execute the query. Then, when we have the result, the function passed to the &lt;code&gt;flatMap&lt;/code&gt; method is called, implementing the sequential composition. You may wonder about the error case. We don&amp;#8217;t need to handle it, because the error is propagated to the stream and the final observer receives it. The function is not called when an error happens.&lt;/p&gt; &lt;p&gt;Asynchronous operations can happen concurrently. But sometimes you need to be aware of when they have completed. This is called &lt;em&gt;parallel composition&lt;/em&gt;. The &lt;code&gt;zip&lt;/code&gt; operator lets you do this. In the &lt;code&gt;createSomeDataIfNone&lt;/code&gt;, we are inserting two articles. This operation is done using &lt;code&gt;insert&lt;/code&gt; (returning a &lt;code&gt;Single&lt;/code&gt;). The &lt;code&gt;zip&lt;/code&gt; operator observes the two given occurrences ofÂ &lt;code&gt;Single&lt;/code&gt; and calls the method passed as last parameter when both have completed. In this case, we just forward the &lt;code&gt;SQLConnection&lt;/code&gt;.&lt;/p&gt; &lt;h2&gt;Compositing Everything to Get Ready&lt;/h2&gt; &lt;p&gt;We have rewritten most of our functions, but we need to adapt the &lt;code&gt;start&lt;/code&gt; method. Remember the start sequence we need to achieve:&lt;/p&gt; &lt;p&gt; // Start sequence:&lt;br /&gt; // 1 &amp;#8211; Retrieve the configuration&lt;br /&gt; // |- 2 &amp;#8211; Create the JDBC client&lt;br /&gt; // |- 3 &amp;#8211; Connect to the database (retrieve a connection)&lt;br /&gt; // |- 4 &amp;#8211; Create table if needed&lt;br /&gt; // |- 5 &amp;#8211; Add some data if needed&lt;br /&gt; // |- 6 &amp;#8211; Close connection when done&lt;br /&gt; // |- 7 &amp;#8211; Start HTTP server&lt;br /&gt; // |- 9 &amp;#8211; we are done!&lt;/p&gt; &lt;p&gt;This composition can be implemented using the &lt;code&gt;flatMap&lt;/code&gt; operator:&lt;/p&gt; &lt;pre class="brush: java; title: ; notranslate"&gt; retriever.rxGetConfig() .doOnSuccess(config -&amp;#38;amp;amp;amp;amp;gt; jdbc = JDBCClient.createShared(vertx, config, &amp;#34;My-Reading-List&amp;#34;)) .flatMap(config -&amp;#38;amp;amp;amp;amp;gt; connect() .flatMap(connection -&amp;#38;amp;amp;amp;amp;gt; this.createTableIfNeeded(connection) .flatMap(this::createSomeDataIfNone) .doAfterTerminate(connection::close) ) .map(x -&amp;#38;amp;amp;amp;amp;gt; config) ) .flatMapCompletable(c -&amp;#38;amp;amp;amp;amp;gt; createHttpServer(c, router)) .subscribe(CompletableHelper.toObserver(fut)); &lt;/pre&gt; &lt;p&gt;The &lt;code&gt;doOnSuccess&lt;/code&gt; is an action operator that receives the item from the observed stream, and lets you implement aÂ &lt;em&gt;side-effect&lt;/em&gt;. Here we assign the &lt;code&gt;jdbc&lt;/code&gt; field.&lt;/p&gt; &lt;p&gt;Then we just use the &lt;code&gt;flatMap&lt;/code&gt; operator to orchestrate our different actions. Look at the &lt;code&gt;doAfterTerminate&lt;/code&gt;. This operator lets us close the connection when the full stream is consumed, which is very useful for cleanup.&lt;/p&gt; &lt;p&gt;There is an important part in this code. So far, we returned RX types, but never calledÂ &lt;code&gt;subscribe&lt;/code&gt;. If you don&amp;#8217;t subscribe, nothing will happen: streams are lazy. &lt;em&gt;So never forget to subscribe&lt;/em&gt;. The subscription materializes the pipeline and triggers the emissions. In our code, it triggers the start sequence. The parameter passed to the &lt;code&gt;subscribe&lt;/code&gt; method is just reporting failure and success to the &lt;code&gt;Future&lt;/code&gt; object passed to the &lt;code&gt;start&lt;/code&gt; method. Basically it maps a &lt;code&gt;Future&lt;/code&gt; to a &lt;code&gt;Subscriber&lt;/code&gt;.&lt;/p&gt; &lt;h2&gt;Implementing the HTTP Actions&lt;/h2&gt; &lt;p&gt;We are almost done. We just need to update our HTTP actions, the method called on HTTP requests. To simplify the code, let&amp;#8217;s modify the &lt;code&gt;ActionHelper&lt;/code&gt; class. This class provides methods returning &lt;code&gt;Handler&amp;#60;AsyncResult&amp;#62;&lt;/code&gt;. But this type is not great with RX APIs where we need subscribers. Let&amp;#8217;s replace these methods with methods returning more-adequate types:&lt;/p&gt; &lt;pre class="brush: java; title: ; notranslate"&gt; private static &amp;#38;amp;amp;amp;amp;lt;T&amp;#38;amp;amp;amp;amp;gt; BiConsumer&amp;#38;amp;amp;amp;amp;lt;T, Throwable&amp;#38;amp;amp;amp;amp;gt; writeJsonResponse( RoutingContext context, int status) { return (res, err) -&amp;#38;amp;amp;amp;amp;gt; { if (err != null) { if (err instanceof NoSuchElementException) { context.response().setStatusCode(404) .end(err.getMessage()); } else { context.fail(err); } } else { context.response().setStatusCode(status) .putHeader(&amp;#34;content-type&amp;#34;, &amp;#34;application/json; charset=utf-8&amp;#34;) .end(Json.encodePrettily(res)); } }; } static &amp;#38;amp;amp;amp;amp;lt;T&amp;#38;amp;amp;amp;amp;gt; BiConsumer&amp;#38;amp;amp;amp;amp;lt;T, Throwable&amp;#38;amp;amp;amp;amp;gt; ok(RoutingContext rc) { return writeJsonResponse(rc, 200); } static &amp;#38;amp;amp;amp;amp;lt;T&amp;#38;amp;amp;amp;amp;gt; BiConsumer&amp;#38;amp;amp;amp;amp;lt;T, Throwable&amp;#38;amp;amp;amp;amp;gt; created(RoutingContext rc) { return writeJsonResponse(rc, 201); } static Action noContent(RoutingContext rc) { return () -&amp;#38;amp;amp;amp;amp;gt; rc.response().setStatusCode(204).end(); } static Consumer&amp;#38;amp;amp;amp;amp;lt;Throwable&amp;#38;amp;amp;amp;amp;gt; onError(RoutingContext rc) { return err -&amp;#38;amp;amp;amp;amp;gt; { if (err instanceof NoSuchElementException) { rc.response().setStatusCode(404) .end(err.getMessage()); } else { rc.fail(err); } }; } &lt;/pre&gt; &lt;p&gt;Now we are ready to implement our HTTP action method. Back to the &lt;code&gt;MyFirstVerticle&lt;/code&gt; class: replace the action methods with this:&lt;/p&gt; &lt;pre class="brush: java; title: ; notranslate"&gt; private void getAll(RoutingContext rc) { connect() .flatMap(this::query) .subscribe(ok(rc)); } private void addOne(RoutingContext rc) { Article article = rc.getBodyAsJson() .mapTo(Article.class); connect() .flatMap(c -&amp;#38;amp;amp;amp;amp;gt; insert(c, article, true)) .subscribe(created(rc)); } private void deleteOne(RoutingContext rc) { String id = rc.pathParam(&amp;#34;id&amp;#34;); connect() .flatMapCompletable(c -&amp;#38;amp;amp;amp;amp;gt; delete(c, id)) .subscribe(noContent(rc), onError(rc)); } private void getOne(RoutingContext rc) { String id = rc.pathParam(&amp;#34;id&amp;#34;); connect() .flatMap(connection -&amp;#38;amp;amp;amp;amp;gt; queryOne(connection, id)) .subscribe(ok(rc)); } private void updateOne(RoutingContext rc) { String id = rc.request().getParam(&amp;#34;id&amp;#34;); Article article = rc.getBodyAsJson() .mapTo(Article.class); connect() .flatMapCompletable(c -&amp;#38;amp;amp;amp;amp;gt; update(c, id, article)) .subscribe(noContent(rc), onError(rc)); } &lt;/pre&gt; &lt;p&gt;As you can see, these methods are implemented using the operators we saw before. They contain &lt;code&gt;subscribe&lt;/code&gt; calls that write the HTTP response. It&amp;#8217;s as simple as that&amp;#8230;&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;We are done! In this post, we have adapted our code to use reactive programming and RxJava 2. The combination of Vert.x and RxJava brings your &lt;em&gt;reactiveness&lt;/em&gt; to another level. You can compose and process asynchronous operations and streams very easily.&lt;/p&gt; &lt;p&gt;Now, don&amp;#8217;t forget that nothing is free. RX can be hard to understand. It may look weird. And depending on your background, you may prefer &lt;code&gt;Future&lt;/code&gt; and callbacks. Vert.x offers you choices, and you are free to choose the model you prefer.&lt;/p&gt; &lt;p&gt;If you want to go further, here are some resources:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="http://escoffier.me/rxjava-hol/"&gt;RxJava 2 tutorial&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://www.javamagazine.mozaicreader.com/JanFeb2018#&amp;#38;pageSet=32&amp;#38;page=0&amp;#38;contentItem=0"&gt;Article about RxJava and Vert.x&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/promotions/building-reactive-microservices-in-java/"&gt;A free minibook showing how to implement microservices with Vert.x&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The next post in this series will cover the deployment of our application on Kubernetes and OpenShift.&lt;/p&gt; &lt;p&gt;Stay tuned, and happy coding!&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F04%2F18%2Feclipse-vertx-reactive-extensions%2F&amp;#38;linkname=When%20Vert.x%20Meets%20Reactive%20eXtensions%20%28Part%205%20of%20Introduction%20to%20Vert.x%29" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F04%2F18%2Feclipse-vertx-reactive-extensions%2F&amp;#38;linkname=When%20Vert.x%20Meets%20Reactive%20eXtensions%20%28Part%205%20of%20Introduction%20to%20Vert.x%29" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F04%2F18%2Feclipse-vertx-reactive-extensions%2F&amp;#38;linkname=When%20Vert.x%20Meets%20Reactive%20eXtensions%20%28Part%205%20of%20Introduction%20to%20Vert.x%29" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F04%2F18%2Feclipse-vertx-reactive-extensions%2F&amp;#38;linkname=When%20Vert.x%20Meets%20Reactive%20eXtensions%20%28Part%205%20of%20Introduction%20to%20Vert.x%29" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F04%2F18%2Feclipse-vertx-reactive-extensions%2F&amp;#38;linkname=When%20Vert.x%20Meets%20Reactive%20eXtensions%20%28Part%205%20of%20Introduction%20to%20Vert.x%29" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F04%2F18%2Feclipse-vertx-reactive-extensions%2F&amp;#38;linkname=When%20Vert.x%20Meets%20Reactive%20eXtensions%20%28Part%205%20of%20Introduction%20to%20Vert.x%29" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F04%2F18%2Feclipse-vertx-reactive-extensions%2F&amp;#38;linkname=When%20Vert.x%20Meets%20Reactive%20eXtensions%20%28Part%205%20of%20Introduction%20to%20Vert.x%29" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F04%2F18%2Feclipse-vertx-reactive-extensions%2F&amp;#38;linkname=When%20Vert.x%20Meets%20Reactive%20eXtensions%20%28Part%205%20of%20Introduction%20to%20Vert.x%29" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F04%2F18%2Feclipse-vertx-reactive-extensions%2F&amp;#38;title=When%20Vert.x%20Meets%20Reactive%20eXtensions%20%28Part%205%20of%20Introduction%20to%20Vert.x%29" data-a2a-url="https://developers.redhat.com/blog/2018/04/18/eclipse-vertx-reactive-extensions/" data-a2a-title="When Vert.x Meets Reactive eXtensions (Part 5 of Introduction to Vert.x)"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/04/18/eclipse-vertx-reactive-extensions/"&gt;When Vert.x Meets Reactive eXtensions (Part 5 of Introduction to Vert.x)&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/HEeRavsAJ3M" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;This post is the fifth post of myÂ Introduction to Eclipse Vert.x series. In the last post, we saw how Vert.x can interact with a database. To tame the asynchronous nature of Vert.x, we used Future objects. In this post, we are going to see another way to manage asynchronous code: reactive programming. We will see [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/04/18/eclipse-vertx-reactive-extensions/"&gt;When Vert.x Meets Reactive eXtensions (Part 5 of Introduction to Vert.x)&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/04/18/eclipse-vertx-reactive-extensions/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">485817</post-id><dc:creator>Clement Escoffier</dc:creator><dc:date>2018-04-18T10:55:50Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/04/18/eclipse-vertx-reactive-extensions/</feedburner:origLink></entry><entry><title>bpmNEXT 2018 - Part 2</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ozhHXl7_MEU/bpmnext-2018-part-2.html" /><category term="bpmNEXT" scheme="searchisko:content:tags" /><category term="Demo" scheme="searchisko:content:tags" /><category term="event" scheme="searchisko:content:tags" /><category term="feed_group_name_jbpm" scheme="searchisko:content:tags" /><category term="feed_name_kverlaen" scheme="searchisko:content:tags" /><category term="Presentation" scheme="searchisko:content:tags" /><author><name>Kris Verlaenen</name></author><id>searchisko:content:id:jbossorg_blog-bpmnext_2018_part_2</id><updated>2018-04-18T16:02:41Z</updated><published>2018-04-17T23:52:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div style="text-align: justify;"&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;b&gt;Decision as a Service (DaaS): The DMN Platform Revolution&lt;/b&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;i&gt;Denis GagnÃ© - Trisotech&lt;/i&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;Denis is showing the progress Trisotech has made offering DMN modeling and execution capabilities as a service.&amp;nbsp; The DMN Modeler is a complete modeling environment for DMN, including collaboration, simulation, test cases, searching, etc. After creating a DMN model, he showed various ways of creating a new DMN Decision Service to expose.&lt;/div&gt;&lt;div style="text-align: justify;"&gt;Next, this can be deployed into the cloud (including using our own Drools or Red Hat Decision Manager DMN engine).&amp;nbsp; Once deployed, it can be tested with a simple HTML form, it has a rest API, debugging the environment allows you to look at the requests that were actually made, etc.&amp;nbsp; Using an API mgmt tool, you can add even more features like authorization.&lt;/div&gt;&lt;div style="text-align: justify;"&gt;Finally, it's of course possible to include these decision services into your processes.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;iframe width="320" height="266" class="YOUTUBE-iframe-video" data-thumbnail-src="https://i.ytimg.com/vi/sYAIcBhVhIc/0.jpg" src="https://www.youtube.com/embed/sYAIcBhVhIc?feature=player_embedded" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;b&gt;Timing the Stock Market with DMN &lt;/b&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;i&gt;Bruce Silver - methodandstyle.com&lt;/i&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;Bruce implemented a DMN model for predicting when to buy and sell stocks.&amp;nbsp; Based on historical stock data, it uses a DMN model to detect patterns (based on local min and max, smoothing, etc.) and&amp;nbsp;&amp;nbsp; This service is then orchestrated by using a process (using Microsoft Flow) to go and download 1 year of data for specific stocks, process it and present the results - using various connectors (to get information from and into Excel, call the REST decision service, etc.).&amp;nbsp; His goal was to show how a non-programmer like himself can use DMN to do real life use cases that can then be fully executed. And you should buy his DMN Cookbook for all the details :)&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;iframe width="320" height="266" class="YOUTUBE-iframe-video" data-thumbnail-src="https://i.ytimg.com/vi/vHCIC1HGbHQ/0.jpg" src="https://www.youtube.com/embed/vHCIC1HGbHQ?feature=player_embedded" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;b&gt;Smarter Contracts with DMN&lt;/b&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;i&gt;Edson Tirelli - Red Hat&lt;/i&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;One of the challenges of using Blockchain for smart contracts is that some of the languages used there (for example in Ethereum) isn't always easy to understand or use (especially for non-experts).&amp;nbsp; The goal Edson had upfront was trying to use DMN instead, as a language for smart contracts that users can understand.&amp;nbsp; Using an example of selling a property, he showed how some of the logic was externalized from the contract into a DMN decision service.&amp;nbsp; The contract raised an event, that the Ethereum Oracle picks up and contacts the DMN service (running in the cloud).&amp;nbsp; Using a simple web app to initialize and finalize the sale, you could see the Blockchain being updated with all the relevant data.&lt;/div&gt;&lt;div style="text-align: justify;"&gt;Pretty cool, although as Edson is my colleague I am obviously biased ;)&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;iframe width="320" height="266" class="YOUTUBE-iframe-video" data-thumbnail-src="https://i.ytimg.com/vi/tdpZgbQbF9Q/0.jpg" src="https://www.youtube.com/embed/tdpZgbQbF9Q?feature=player_embedded" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;b&gt;Designing the Data-Driven Company&lt;/b&gt;&lt;br /&gt;&lt;i&gt;Jochen Seemann - MID GmbH&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;The Business Decision Map is a way to represent decisions at different levels: tactical decision, operational decisions and business events. Using the example of a car rental company, it allows you to represent the decisions they need to make at the different levels.&amp;nbsp; Using the MID Innovator tool, these decisions can be represented using DMN.&amp;nbsp; But other options like PMML and Machine learning can also be combined.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;iframe width="320" height="266" class="YOUTUBE-iframe-video" data-thumbnail-src="https://i.ytimg.com/vi/zb__xVsOEA0/0.jpg" src="https://www.youtube.com/embed/zb__xVsOEA0?feature=player_embedded" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Using Customer Journeys to Connect Theory with Reality&lt;/b&gt; &lt;br /&gt;&lt;i&gt;Till Reiter and Enrico Teterra - Signavio&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;Since the focus of any company should be on the customer, Signavio developed a new notation for presenting customer journeys and link those to processes and business intelligence.&amp;nbsp; Using the example of a communication company where a customer has a connectivity issue, they showed an end-to-end example.&amp;nbsp; The customer (with different moods) is going through various steps, and traffic lights link these to actual data collected at runtime, or to the business process involved.&amp;nbsp; Drilling into the data, it became apparent that a process improvement to reduce the number of field visits would be worth the effort, and everything was linked to the data to substantiate that claim.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;iframe width="320" height="266" class="YOUTUBE-iframe-video" data-thumbnail-src="https://i.ytimg.com/vi/ov0SqJCMmoY/0.jpg" src="https://www.youtube.com/embed/ov0SqJCMmoY?feature=player_embedded" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Discovering the Organizational DNA&lt;/b&gt;&lt;br /&gt;&lt;i&gt;Jude Chagas Pereira, IYCON&lt;/i&gt;&lt;br /&gt;&lt;i&gt;Frank Kowalkowski, Knowledge Consultants, Inc.&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;Afterspyre offers various kind of analytics to help organizations make the right decisions.&amp;nbsp;&amp;nbsp; By modeling your organizational DNA (like objectives, technology solutions, datacenters, etc.), the tool can then find any relationships between all these (for example which datacenter is running which objectives).&amp;nbsp; Other options include sentiment analysis (based on feedback from customers), affinity matrices (checking how well different thinks go together), ranking (comparing different options with each other), etc.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;iframe width="320" height="266" class="YOUTUBE-iframe-video" data-thumbnail-src="https://i.ytimg.com/vi/NsCDgKPsTCs/0.jpg" src="https://www.youtube.com/embed/NsCDgKPsTCs?feature=player_embedded" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ozhHXl7_MEU" height="1" width="1" alt=""/&gt;</content><summary>Decision as a Service (DaaS): The DMN Platform Revolution Denis GagnÃ© - Trisotech Denis is showing the progress Trisotech has made offering DMN modeling and execution capabilities as a service.Â  The DMN Modeler is a complete modeling environment for DMN, including collaboration, simulation, test cases, searching, etc. After creating a DMN model, he showed various ways of creating a new DMN Decisio...</summary><dc:creator>Kris Verlaenen</dc:creator><dc:date>2018-04-17T23:52:00Z</dc:date><feedburner:origLink>http://kverlaen.blogspot.com/2018/04/bpmnext-2018-part-2.html</feedburner:origLink></entry></feed>
